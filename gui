local Halloween = loadstring(game:HttpGet("https://raw.githubusercontent.com/mercymercypeace/Strat/refs/heads/main/custom%20gui"))()

local players = game:GetService("Players")

getgenv().Speed = 16
getgenv().Enabled = false

local function bypassWalkSpeed()
    if getgenv().executed then
        print("walkspeed already bypassed - applying changes")
        if not getgenv().Enabled then
            return
        end
    else
        getgenv().executed = true
        print("walkspeed bypassed")

        local mt = getrawmetatable(game)
        setreadonly(mt, false)

        local oldindex = mt.__index
        mt.__index = newcclosure(function(self, b)
            if b == 'WalkSpeed' then
                return 16
            end
            return oldindex(self, b)
        end)
    end
end

local win = Halloween:CreateWindow({
    Title = "halloween gui " .. Halloween.Version,
    SubTitle = "made by me lol",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
})

local tabs = {
    main = win:AddTab({Title = "main", Icon = ""}),
    settings = win:AddTab({Title = "settings", Icon = ""})
}

Halloween:Notify({
    Title = "yoo",
    Content = "script loaded successfully",
    SubContent = "mobile + pc support",
    Duration = 5
})

tabs.main:AddParagraph({
    Title = "welcome",
    Content = "this is a paragraph thing\nyou can put whatever here\nworks on mobile too!"
})

tabs.main:AddButton({
    Title = "test button",
    Description = "does something cool idk",
    Callback = function()
        win:Dialog({
            Title = "sup",
            Content = "this is a dialog box thing",
            Buttons = {
                {
                    Title = "ok cool",
                    Callback = function()
                        print("clicked ok")
                    end
                },
                {
                    Title = "nah",
                    Callback = function()
                        print("clicked cancel")
                    end
                }
            }
        })
    end
})

local speedToggle = tabs.main:AddToggle("speedtoggle", {
    Title = "enable speed hack",
    Default = false
})

speedToggle:OnChanged(function(val)
    getgenv().Enabled = val
    
    if val then
        bypassWalkSpeed()
        
        task.spawn(function()
            while getgenv().Enabled and task.wait() do
                local char = players.LocalPlayer.Character
                if char and char:FindFirstChild("Humanoid") then
                    char.Humanoid.WalkSpeed = getgenv().Speed
                end
            end
        end)
        
        print("speed hack enabled")
    else
        local char = players.LocalPlayer.Character
        if char and char:FindFirstChild("Humanoid") then
            char.Humanoid.WalkSpeed = 16
        end
        print("speed hack disabled")
    end
end)

local speedSlider = tabs.main:AddSlider("speedslider", {
    Title = "walk speed",
    Description = "set your speed value",
    Default = 16,
    Min = 16,
    Max = 200,
    Rounding = 1,
    Callback = function(val)
        getgenv().Speed = val
        
        if getgenv().Enabled then
            local char = players.LocalPlayer.Character
            if char and char:FindFirstChild("Humanoid") then
                char.Humanoid.WalkSpeed = val
            end
        end
    end
})

speedSlider:OnChanged(function(val)
    print("speed set to:", val)
end)

players.LocalPlayer.CharacterAdded:Connect(function(char)
    if getgenv().Enabled then
        bypassWalkSpeed()
        local hum = char:WaitForChild("Humanoid")
        task.wait(0.1)
        hum.WalkSpeed = getgenv().Speed
    end
end)

tabs.main:AddButton({
    Title = "ðŸŽƒ reset speed",
    Description = "sets speed back to 16",
    Callback = function()
        getgenv().Speed = 16
        getgenv().Enabled = false
        Halloween.Options.speedslider:SetValue(16)
        Halloween.Options.speedtoggle:SetValue(false)
        local char = players.LocalPlayer.Character
        if char and char:FindFirstChild("Humanoid") then
            char.Humanoid.WalkSpeed = 16
        end
        print("speed reset")
    end
})

local dropdown = tabs.main:AddDropdown("dropdown1", {
    Title = "select option",
    Values = {"option 1", "option 2", "option 3", "option 4"},
    Multi = false,
    Default = 1,
})

dropdown:OnChanged(function(val)
    print("selected:", val)
end)

local input = tabs.main:AddInput("inputbox", {
    Title = "username",
    Default = "roblox",
    Placeholder = "type here...",
    Numeric = false,
    Finished = false,
    Callback = function(val)
        print("input:", val)
    end
})

input:OnChanged(function()
    print("updated:", input.Value)
end)

local color = tabs.main:AddColorpicker("colorpick", {
    Title = "theme color",
    Default = Color3.fromRGB(255, 140, 0)
})

color:OnChanged(function()
    print("color:", color.Value)
end)

tabs.settings:AddParagraph({
    Title = "settings",
    Content = "configure your gui here\nchange keybinds and stuff\ndrag titlebar to move gui"
})

local minimizeKey = tabs.settings:AddKeybind("minimizekey", {
    Title = "ðŸŽƒ minimize gui",
    Mode = "Toggle",
    Default = "RightShift",
    Callback = function()
        win.ToggleMinimize()
    end,
    ChangedCallback = function(new)
        print("minimize key changed to:", new)
    end
})

minimizeKey:OnClick(function()
    print("gui minimized:", win.Minimized())
end)

local toggleKey = tabs.settings:AddKeybind("toggleui", {
    Title = "ðŸ‘» toggle ui",
    Mode = "Toggle",
    Default = "LeftControl",
    Callback = function(val)
        win.MainFrame.Visible = val
    end,
    ChangedCallback = function(new)
        print("toggle key changed to:", new)
    end
})

toggleKey:OnClick(function()
    print("ui toggled, visible:", toggleKey:GetState())
end)

tabs.settings:AddButton({
    Title = "ðŸŽƒ minimize now",
    Description = "minimizes the gui instantly",
    Callback = function()
        win.ToggleMinimize()
    end
})

tabs.settings:AddToggle("notifs", {
    Title = "notifications",
    Default = true
})

tabs.settings:AddButton({
    Title = "test notification",
    Description = "sends a test notif",
    Callback = function()
        if Halloween.Options.notifs.Value then
            Halloween:Notify({
                Title = "test",
                Content = "this is a test notification",
                Duration = 3
            })
        else
            print("notifications disabled")
        end
    end
})

tabs.settings:AddButton({
    Title = "ðŸ’€ destroy gui",
    Description = "removes the gui completely",
    Callback = function()
        win.ScreenGui:Destroy()
        print("gui destroyed")
    end
})

win:SelectTab(1)

Halloween:Notify({
    Title = "ready",
    Content = "everything loaded successfully",
    SubContent = "have fun!",
    Duration = 3
})
