local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local workspace = game:GetService("Workspace")

local range = 20
local interval = 10
local enabled = false

local function getRootPart()
    local character = player.Character
    if not character then
        character = player.CharacterAdded:Wait()
    end
    return character:WaitForChild("HumanoidRootPart")
end

local function findNearestGumdrop(rootPart)
    local nearest = nil
    local shortestDist = math.huge
    
    local pickups = workspace:FindFirstChild("Pickups")
    
    if pickups then
        for i, v in pairs(pickups:GetChildren()) do
            if v:IsA("BasePart") then
                local dist = (v.Position - rootPart.Position).magnitude
                if dist <= range and dist < shortestDist then
                    shortestDist = dist
                    nearest = v
                end
            end
        end
    end
    
    return nearest, shortestDist
end

spawn(function()
    local root = getRootPart()
    
    while true do
        if enabled then
            if not root.Parent or not root.Parent.Parent then
                root = getRootPart()
            end
            
            local gumdrop = findNearestGumdrop(root)
            
            if gumdrop then
                local pos = gumdrop.Position + Vector3.new(0, root.Size.Y / 2 + 0.1, 0)
                root.CFrame = CFrame.new(pos)
            end
        end
        
        wait(interval)
    end
end)

local w = library:CreateWindow("Gumdrop Collector")

local b = w:CreateFolder("Main")

b:Label("Auto Collector",{
    TextSize = 25;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
}) 

b:Toggle("Enable Auto Collect",function(bool)
    enabled = bool
    print("Auto Collect:", enabled)
end)

b:Slider("Detection Range",{
    min = 10;
    max = 100;
    precise = false;
},function(value)
    range = value
    print("Range:", value)
end)

b:Slider("Check Interval",{
    min = 1;
    max = 20;
    precise = true;
},function(value)
    interval = value
    print("Interval:", value)
end)

b:Button("Destroy GUI",function()
    b:DestroyGui()
end)
