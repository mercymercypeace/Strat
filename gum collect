local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

local range = 20
local interval = 10
local enabled = false

local function getRootPart()
    local character = player.Character
    if not character then
        character = player.CharacterAdded:Wait()
    end
    return character:WaitForChild("HumanoidRootPart")
end

local function findNearestGumdrop(rootPart)
    local nearest = nil
    local shortestDist = math.huge
    
    local pickups = workspace:FindFirstChild("Pickups")
    
    if pickups then
        for i, v in pairs(pickups:GetChildren()) do
            if v:IsA("BasePart") then
                local dist = (v.Position - rootPart.Position).magnitude
                if dist <= range and dist < shortestDist then
                    shortestDist = dist
                    nearest = v
                end
            end
        end
    end
    
    return nearest, shortestDist
end

spawn(function()
    local root = getRootPart()
    
    while true do
        if enabled then
            if not root.Parent or not root.Parent.Parent then
                root = getRootPart()
            end
            
            local gumdrop = findNearestGumdrop(root)
            
            if gumdrop then
                local pos = gumdrop.Position + Vector3.new(0, root.Size.Y / 2 + 0.1, 0)
                root.CFrame = CFrame.new(pos)
            end
        end
        
        wait(interval)
    end
end)

local Window = Fluent:CreateWindow({
    Title = "Gumdrop Collector",
    SubTitle = "Auto Farm",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Tabs.Main:AddParagraph({
        Title = "Gumdrop Auto Collector",
        Content = "Automatically teleports to nearby gumdrops\nConfigure settings below"
    })

    local Toggle = Tabs.Main:AddToggle("AutoCollect", {
        Title = "Enable Auto Collect", 
        Default = false 
    })

    Toggle:OnChanged(function()
        enabled = Options.AutoCollect.Value
        Fluent:Notify({
            Title = "Auto Collect",
            Content = enabled and "Enabled" or "Disabled",
            Duration = 3
        })
    end)

    local RangeSlider = Tabs.Main:AddSlider("Range", {
        Title = "Detection Range",
        Description = "Distance to detect gumdrops",
        Default = 20,
        Min = 10,
        Max = 100,
        Rounding = 0,
        Callback = function(Value)
            range = Value
        end
    })

    local IntervalSlider = Tabs.Main:AddSlider("Interval", {
        Title = "Check Interval",
        Description = "Time between checks (seconds)",
        Default = 10,
        Min = 1,
        Max = 20,
        Rounding = 1,
        Callback = function(Value)
            interval = Value
        end
    })
end

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})

InterfaceManager:SetFolder("GumdropCollector")
SaveManager:SetFolder("GumdropCollector/configs")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Gumdrop Collector",
    Content = "Script loaded successfully!",
    Duration = 5
})

SaveManager:LoadAutoloadConfig()

-- Mobile Support: Draggable Toggle Button
local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")

ScreenGui.Name = "MobileToggle"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = ScreenGui
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ToggleButton.BorderSizePixel = 0
ToggleButton.Position = UDim2.new(0.9, 0, 0.1, 0)
ToggleButton.Size = UDim2.new(0, 60, 0, 60)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Text = "ðŸ“‹"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 30
ToggleButton.Active = true
ToggleButton.Draggable = true

UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = ToggleButton

local guiVisible = true

ToggleButton.MouseButton1Click:Connect(function()
    guiVisible = not guiVisible
    Window.Root.Visible = guiVisible
    
    if guiVisible then
        ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    else
        ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    end
end)
